                        Контекст приложения и контекст запроса.

1. Когда сервер получает некий запрос от клиента (g, current_app), то сначала может быть создан
контекст приложения, а затем обязательно создается контекст запроса (request, session).
с контекстом приложения связаны 2 глобальные переменные: g & current_app.
2. В переменной g сохраняется пользовательская информация, необходимая для обработки запроса
(например когда мы хотим сохранить текущее соединение с БД), а когда запрос совершит свою работу,
мы закрывем соединение. ! Как только обработка запроса завершается, данные в объекте g
автоматически удаляются, то есть они временные в процессе существования контекст-приложения.
3. Переменная current_app ссылается на контекст текущего приложения, которое было активизировано
Flask в ответ на текущий запрос. То есть эта переменная служит для работы нескольких приложений,
которая будет ссылаться на текущее приложение, активизированное для соотв. запроса.
Контекст приложения может существовать, а может и не существовать. Для экономии памяти.
4. Затем создается контекст запроса, с которым связаны 2 важные переменные:
request&session.
5. request содержит данные, связанные с текущим запросом(get запрос в формате key: value)
Для каждого запроса формируется своя request-переменная.
6. session - это словарь, в котром можно сохранять данные в пределах сессии. Эта сессия продолжает
существовать даже поле того, как от клиента пришел очередной запрос. Часто это делается для
авторизации пользователя на сайте.